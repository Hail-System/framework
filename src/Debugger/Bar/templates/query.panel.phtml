<?php
namespace Hail\Debugger;
?>
<style>
    #tracy-queries code pre b { color: blue; }
    #tracy-queries pre.tracy-dump { background-color: inherit; }
    #tracy-queries input[type="checkbox"] { margin-right: .2em; }
    #tracy-queries .tracy-queries-item { min-width: 300px; }
    #tracy-queries .tracy-queries-highlight td,
    #tracy-queries tr:hover td { background-color: #EAFCFF !important; }
    #tracy-queries th.tracy-queries-elapsed,
    #tracy-queries td.tracy-queries-elapsed { text-align: right; width: 4em; }
    #tracy-queries .tracy-queries-hidden { display: none; }
    #tracy-queries .tracy-queries-storages { margin-bottom: 2ex; }
    #tracy-queries .tracy-queries-borderfix { border: 1px solid #E6DFBF; border-width: 1px 0px; }
    #tracy-queries .tracy-queries-overflow { max-height: 380px; overflow-y: scroll; box-sizing: border-box; display: block; }
    #tracy-queries .tracy-queries-overflow > table > thead > tr:first-of-type > th { border-top: none; }
    #tracy-queries .tracy-queries-overflow > table > tbody > tr:last-of-type > td { border-bottom: none; }
    #tracy-queries .tracy-queries-label-info { position: relative; margin-left: -30px; }
    #tracy-queries .tracy-queries-label-result { position: relative; margin-left: -40px; }
    #tracy-queries .tracy-queries-label-fix { margin-top: -18px; }
</style>

<h1><?=$title?></h1>

<?php if (\count($aggregations)) { ?>
<div id="tracy-queries">
    <table class="tracy-queries-storages">
        <thead>
        <tr>
            <th class="tracy-queries-elapsed">ms</th>
            <th>Storage</th>
            <th>Count</th>
        </tr>
        </thead>
        <tbody>
        <?php foreach ($aggregations as $aggregate) { ?>
        <tr data-storage-id="<?=$this->getStorageId($aggregate)?>" class="storage">
            <td class="tracy-queries-elapsed"><?=\number_format($aggregate['elapsed'], 2)?></td>
            <td>
                <input type="checkbox" checked>
                <?=$aggregate['storageType']?>
                <?php if ($aggregate['databaseName']) {?>
                <code>(<?=$aggregate['databaseName']?>)</code>
                <?php } ?>
            </td>
            <td><?=$aggregate['count']?></td>
        </tr>
        <?php } ?>
        </tbody>
    </table>
    <div class="tracy-queries-borderfix">
        <div class="tracy-queries-overflow">
            <table class="tracy-queries-list tracy-queries-border-fix">
                <thead>
                <tr>
                    <th class="tracy-queries-elapsed">ms</th>
                    <th>Type</th>
                    <th class="tracy-queries-item">Query</th>
                    <th>Build/ms</th>
                    <th>Query/ms</th>
                    <th>Fetch/ms</th>
                </tr>
                </thead>
                <tbody>
                <?php foreach ($queries as $query) { ?>
                <?php
                $result = Dumper::toHtml($query->getResult(), [
                    Dumper::COLLAPSE => true
                ]);
                $info = Dumper::toHtml($query->getInfo(), [
                    Dumper::COLLAPSE => true,
                    Dumper::DEPTH => 6,
                ]);
                $time = $query->getElapsedTime();
                ?>
                <tr data-storage-id="<?=$this->getStorageId($query)?>">
                    <td class="tracy-queries-elapsed" style="color: <?=$this->getColorInRange($time)?>"><?=\number_format($time, 2)?></td>
                    <td><?=$query->getType()?></td>
                    <td class="tracy-queries-item">
                        <code><pre class="dump"><?=$query->getQuery()?></pre></code>
                        <?php if ($info) { ?>
                        <div>
                            <span class="tracy-queries-label-info">info</span>
                            <div class="tracy-queries-label-fix"><?=$info?></div>
                        </div>
                        <?php } ?>
	                    <?php if ($result) { ?>
                        <div>
                            <span class="tracy-queries-label-result"><?=$query->isError() ? 'error' : 'result'?></span>
                            <div class="tracy-queries-label-fix"><?=$result?></div>
                        </div>
	                    <?php } ?>
                    </td>
                    <td><?=\number_format($query->getBuildTime(), 2)?></td>
                    <td><?=\number_format($query->getQueryTime(), 2)?></td>
                    <td><?=\number_format($query->getFetchTime(), 2)?></td>
                </tr>
                <?php } ?>
                </tbody>
            </table>
        </div>
    </div>

    <script type="text/javascript">
        //<![CDATA[
        (function() {
            var storageRows = document.querySelectorAll('.tracy-queries-storages tr[data-storage-id]');
            var queryRows = document.querySelectorAll('.tracy-queries-list tr[data-storage-id]');
            var filter = {};
            var foreach = function(array, cb) {
                for (i = 0; i < array.length; ++i) {
                    cb(array[i], array[i].getAttribute('data-storage-id'));
                }
            };
            var findStorageRow = function(type) {
                var row;
                foreach(storageRows, function(storage, t) {
                    if (t === type) {
                        row = storage;
                    }
                });
                return row;
            };
            var updateFilteredRows = function() {
                foreach(storageRows, function(storage, id) {
                    filter[id] = storage.querySelector('input').checked;
                });
                saveState(filter);
                foreach(queryRows, function(query, id) {
                    query.setAttribute('class', filter[id] ? '' : 'tracy-queries-hidden');
                });
            };
            var registerHandlers = function() {
                foreach(queryRows, function(query, id) {
                    query.addEventListener("mouseenter", function(event) {
                        findStorageRow(id).setAttribute('class', 'storage tracy-queries-highlight');
                    });
                    query.addEventListener("mouseleave", function(event) {
                        findStorageRow(id).setAttribute('class', 'storage');
                    });
                });
                foreach(storageRows, function(storage, id) {
                    storage.addEventListener("click", function(event) {
                        var checkbox = event.target;
                        if (!checkbox.getAttribute("type"))
                        {
                            checkbox = event.target.parentNode.querySelector('input');
                            checkbox.checked = !checkbox.checked;
                        }
                        updateFilteredRows();
                    });
                });
            };
            var saveState = function(filter) {
                localStorage.setItem("tracy-queries", JSON.stringify(filter));
            };
            var loadState = function() {
                filter = JSON.parse(localStorage.getItem("tracy-queries") || "{}");
                foreach(storageRows, function(storage, id) {
                    storage.querySelector('input').checked = !(id in filter) || filter[id];
                });
                updateFilteredRows();
            };
            registerHandlers();
            loadState();
        })();
        //]]>
    </script>
</div>
<?php } ?>
