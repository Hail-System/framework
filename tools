#!/usr/bin/env php
<?php
// System Start Time
define('START_TIME', isset($_SERVER['REQUEST_TIME_FLOAT']) ? $_SERVER['REQUEST_TIME_FLOAT'] : microtime(true));

// Now timestamp
define('NOW', isset($_SERVER['REQUEST_TIME']) ? $_SERVER['REQUEST_TIME'] : time());

// Absolute path to the system folder
define('SYSTEM_PATH', __DIR__ . '/');

// Path to the Hail namespace root folder
define('HAIL_PATH', SYSTEM_PATH . 'Hail/');

// Absolute path to the temp folder
define('TEMP_PATH', SYSTEM_PATH . 'temp/');

// Embedded cache engine: 'auto', 'apcu', 'apc', 'xcache', 'yac', 'pcache', 'wincache', 'none'
define('EMBEDDED_CACHE_ENGINE', 'auto');
define('EMBEDDED_CACHE_CHECK_DELAY', 5);

// Config Setting
define('CONFIG_ENABLE_YACONF', false);
define('CONFIG_PATH', SYSTEM_PATH . 'config/');

// Language path
define('LANG_PATH', SYSTEM_PATH . 'lang/');
define('LANG_DOMAIN', 'default');

require HAIL_PATH . 'Bootstrap.php';
$di = Hail\Bootstrap::di();
Hail\Bootstrap::autoload($di);

date_default_timezone_set(
	Config::get('app.timezone')
);

//Debugger::enable(
//	Debugger::PRODUCTION,
//	TEMP_PATH . 'log/'
//);

Gettext::init(LANG_PATH, LANG_DOMAIN,
	Config::get('app.locale')
);

DI::set('CLI', function($c) {
	return new Hail\CLImate\CLImate();
});

$cli = DI::CLI();

$cli->arguments->add([
        'user' => [
                'prefix'       => 'u',
                'longPrefix'   => 'user',
                'description'  => 'Username',
                'defaultValue' => 'me_myself_i',
        ],
        'password' => [
                'prefix'      => 'p',
                'longPrefix'  => 'password',
                'description' => 'Password',
                'required'    => true,
        ],
        'iterations' => [
                'prefix'      => 'i',
                'longPrefix'  => 'iterations',
                'description' => 'Number of iterations',
                'castTo'      => 'int',
        ],
        'verbose' => [
                'prefix'      => 'v',
                'longPrefix'  => 'verbose',
                'description' => 'Verbose output',
                'noValue'     => true,
        ],
        'help' => [
                'longPrefix'  => 'help',
                'description' => 'Prints a usage statement',
                'noValue'     => true,
        ],
        'path' => [
                'description' => 'The path to push',
        ],
]);

$cli->description('Hail Framework Console Tools');

//$cli->arguments->parse();
$cli->usage();

